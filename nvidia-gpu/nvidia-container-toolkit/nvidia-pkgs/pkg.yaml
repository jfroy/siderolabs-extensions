name: nvidia-pkgs
variant: scratch
shell: /bin/bash
install:
  - bash
dependencies:
  - image: cgr.dev/chainguard/wolfi-base@{{ .WOLFI_BASE_REF }}
  # depends on glibc to update ld.so.cache
  # so any stage depending on nvidia-pkgs will have the updated cache
  - stage: glibc
steps:
  - sources:
    # {{ if eq .ARCH "aarch64" }} This in fact is YAML comment, but Go templating instruction is evaluated by bldr
      - url: https://download.nvidia.com/XFree86/Linux-aarch64/{{ .NVIDIA_DRIVER_VERSION }}/NVIDIA-Linux-aarch64-{{ .NVIDIA_DRIVER_VERSION }}.run
        destination: nvidia.run
        sha256: b896b76ae465307afc5b269c40bd8ccb279e6ea7d3ecae95534a91ecb1971572
        sha512: 79b956ad890a096bfb00c9dd996cba0673200b1d61f702ea6c5c64ca3fe2cefdd61e2bc844fdb7b4668c2796af5399be51e6f511565c3799cf731de2a7e9efaa
    # {{ else }} This in fact is YAML comment, but Go templating instruction is evaluated by bldr
      - url: https://download.nvidia.com/XFree86/Linux-x86_64/{{ .NVIDIA_DRIVER_VERSION }}/NVIDIA-Linux-x86_64-{{ .NVIDIA_DRIVER_VERSION }}-no-compat32.run
        destination: nvidia.run
        sha256: 5a92545013649d6435d46fc8b5af617f4e3fdea78ee435e034c14bc47557c117
        sha512: 9df55bd659c909d879a95e9b740487ba69c8b30be1f2c43be405c41899b3ad8eb493daaed9f0eca02d8a78729fcdd49e00c3d86e9c2b39a7644724bbf8195386
    # {{ end }} This in fact is YAML comment, but Go templating instruction is evaluated by bldr
    prepare:
      - |
        # the nvidia installer validates these packages are installed
        ln -s /bin/true /bin/modprobe
        ln -s /bin/true /bin/rmmod
        ln -s /bin/true /bin/lsmod
        ln -s /bin/true /bin/depmod

        bash nvidia.run --extract-only
    install:
      - |
        cd NVIDIA-Linux-*

        ./nvidia-installer --silent \
          --opengl-prefix=/rootfs/usr/local \
          --utility-prefix=/rootfs/usr/local \
          --utility-libdir=glibc/lib \
          --documentation-prefix=/rootfs/usr/local \
          --no-rpms \
          --no-kernel-modules \
          --log-file-name=/tmp/nvidia-installer.log \
          --no-distro-scripts \
          --no-wine-files \
          --no-kernel-module-source \
          --no-check-for-alternate-installs \
          --override-file-type-destination=NVIDIA_MODPROBE:/rootfs/usr/local/bin \
          --override-file-type-destination=FIRMWARE:/rootfs/lib/firmware/nvidia/{{ .NVIDIA_DRIVER_VERSION }} \
          --no-systemd

        # copy vulkan/OpenGL json files
        mkdir -p /rootfs/{etc/vulkan,usr/{lib/xorg,share/{glvnd,egl}}}

        cp -r /usr/share/glvnd/* /rootfs/usr/share/glvnd
        cp -r /usr/share/egl/* /rootfs/usr/share/egl
        cp -r /etc/vulkan/* /rootfs/etc/vulkan

        # mv over files from /usr/local/lib -> /usr/local/glibc/lib
        mv /rootfs/usr/local/lib/* /rootfs/usr/local/glibc/lib/

        # copy xorg files
        mkdir -p /rootfs/usr/local/glibc/lib/nvidia/xorg
        find /usr/lib/xorg/modules -type f -exec cp {} /rootfs/usr/local/glibc/lib/nvidia/xorg \;

        # run ldconfig to update the cache
        /rootfs/usr/local/glibc/sbin/ldconfig -r /rootfs

        mkdir -p /rootfs/usr/local/lib/containers/nvidia-persistenced \
          /rootfs/usr/local/etc/containers \
          /rootfs/usr/etc/udev/rules.d

        # copy udev rule
        cp /pkg/files/15-nvidia-device.rules /rootfs/usr/etc/udev/rules.d
finalize:
  - from: /rootfs
    to: /rootfs
